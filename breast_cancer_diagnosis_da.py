# -*- coding: utf-8 -*-
"""Breast-Cancer-Diagnosis-DA.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1zkGSCZ21xIuw9nI8tOzlRDMhPyqhyY1V
"""

import keras
from keras import layers
import pandas as pd

# Login using e.g. `huggingface-cli login` to access this dataset
df = pd.read_csv("hf://datasets/mnemoraorg/wisconsin-breast-cancer-diagnostic/raw_breast_cancer.csv")

training_features = [df["radius_mean"],
                     df["texture_mean"],
                     df["perimeter_mean"],
                     df["area_mean"],
                     df["smoothness_mean"],
                     df["compactness_mean"],
                     df["concavity_mean"],
                     df["concave points_mean"],
                     df["symmetry_mean"],
                     df["fractal_dimension_mean"]]

training_features = pd.concat(objs=training_features, axis=1)

y = df["diagnosis"]

text_vectorization_layer = layers.TextVectorization()

text_vectorization_layer.adapt(y.values)

y = text_vectorization_layer(y)

training_features

y

model = keras.Sequential()

layer_one = layers.Dense(units=len(y), activation=keras.activations.sigmoid)
layer_two = layers.Dense(units=512, activation=keras.activations.relu)
layer_three = layers.Dense(units=256, activation=keras.activations.log_softmax)
layer_four = layers.Dense(units=128, activation=keras.activations.hard_tanh)
layer_five = layers.Dense(units=64, activation=keras.activations.hard_silu)
layer_six = layers.Dense(units=32, activation=keras.activations.relu)
layer_seven = layers.Dense(units=16, activation=keras.activations.gelu)
layer_eight = layers.Dense(units=8, activation=keras.activations.log_sigmoid)
layer_nine = layers.Dense(units=4, activation=keras.activations.soft_shrink)
layer_ten = layers.Dense(units=2, activation=keras.activations.sparse_sigmoid)
layer_eleven = layers.Dense(units=1, activation=keras.activations.sigmoid)

model.add(layer_one)
model.add(layer_two)
model.add(layer_three)
model.add(layer_four)
model.add(layer_five)
model.add(layer_six)
model.add(layer_seven)
model.add(layer_eight)
model.add(layer_nine)
model.add(layer_ten)
model.add(layer_eleven)

model(training_features)

model.summary()

model.compile(loss=keras.losses.mean_squared_error, metrics=[keras.metrics.mean_absolute_error])

model.fit(x=training_features, y=y, epochs=10)

import matplotlib.pyplot as plt

hist = model.history.history

plt.plot(hist['loss'])
plt.xlabel = "Epoch"
plt.ylabel = "MSE Loss"
plt.show()

plt.plot(hist['mean_absolute_error'])
plt.xlabel = "Epoch"
plt.ylabel = "MAE Accuracy"
plt.show()

model.fit(x=training_features, y=y, epochs=50)
hist = model.history.history

plt.plot(hist['loss'])
plt.xlabel = "Epoch"
plt.ylabel = "MSE Loss"
plt.show()

plt.plot(hist['mean_absolute_error'])
plt.xlabel = "Epoch"
plt.ylabel = "MAE Accuracy"
plt.show()

model.fit(x=training_features, y=y, epochs=100)
hist = model.history.history

plt.plot(hist['loss'])
plt.xlabel = "Epoch"
plt.ylabel = "MSE Loss"
plt.show()

plt.plot(hist['mean_absolute_error'])
plt.xlabel = "Epoch"
plt.ylabel = "MAE Accuracy"
plt.show()